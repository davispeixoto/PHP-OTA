<?php

namespace Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType;

/**
 * Class representing EnergyAType
 */
class EnergyAType
{

    /**
     * Energy efficient appliances indicator.Example: trueImplementer: If true, the
     * property uses energy efficient appliances (e.g. dish washers, washing machines,
     * dryers).
     *
     * @property boolean $efficientAppliancesInd
     */
    private $efficientAppliancesInd = null;

    /**
     * Energy efficient lighting used indicator.Example: trueImplementer: If true, the
     * property uses energy saving lighting facilities, such as energy-efficient LED
     * fixtures.
     *
     * @property boolean $efficientLightingInd
     */
    private $efficientLightingInd = null;

    /**
     * Combined heat and power units used indicator.Example: trueImplementer: If true,
     * the property uses combined heat and power units.
     *
     * @property boolean $heatPowerCombInd
     */
    private $heatPowerCombInd = null;

    /**
     * Heat pumps used indicator.Example: trueImplementer: If true, the property uses
     * heat pumps.
     *
     * @property boolean $heatPumpInd
     */
    private $heatPumpInd = null;

    /**
     * Power saving policy indicator.Example: trueImplementer: If true, the property
     * has a power saving policy.
     *
     * @property boolean $powerSavingPolicyInd
     */
    private $powerSavingPolicyInd = null;

    /**
     * Solar energy used indicator.Example: trueImplementer: If true, the property uses
     * solar energy.
     *
     * @property boolean $solarInd
     */
    private $solarInd = null;

    /**
     * Temperature control indicator.Example: trueImplementer: If true, guest rooms or
     * meeting facilities contain temperature control mechanisms, such as digital
     * thermostats for constant temperature control.
     *
     * @property mixed $tempControlInd
     */
    private $tempControlInd = null;

    /**
     * Wind turbines used indicator.Example: trueImplementer: If true, the property
     * uses wind turbines.
     *
     * @property boolean $windTurbineInd
     */
    private $windTurbineInd = null;

    /**
     * Renewable energy kilowatts amount.Example: 677Implementer: This is the amount of
     * power generated by any sources of renewable energy at the hotel in kilowatts.
     *
     * @property integer $energyGenerated
     */
    private $energyGenerated = null;

    /**
     * Energy star rating.Example: 4.2Implementer: This is the energy star rating of
     * the property.
     *
     * @property string $energyStarRating
     */
    private $energyStarRating = null;

    /**
     * Power usage detail.
     *
     * @property
     * \Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType\EnergyAType\UsageAType[]
     * $usage
     */
    private $usage = null;

    /**
     * Energy program description.
     *
     * @property \Davispeixoto\OpenTravelAlliance\ParagraphType[] $programDescription
     */
    private $programDescription = null;

    /**
     * Gets as efficientAppliancesInd
     *
     * Energy efficient appliances indicator.Example: trueImplementer: If true, the
     * property uses energy efficient appliances (e.g. dish washers, washing machines,
     * dryers).
     *
     * @return boolean
     */
    public function getEfficientAppliancesInd()
    {
        return $this->efficientAppliancesInd;
    }

    /**
     * Sets a new efficientAppliancesInd
     *
     * Energy efficient appliances indicator.Example: trueImplementer: If true, the
     * property uses energy efficient appliances (e.g. dish washers, washing machines,
     * dryers).
     *
     * @param boolean $efficientAppliancesInd
     * @return self
     */
    public function setEfficientAppliancesInd($efficientAppliancesInd)
    {
        $this->efficientAppliancesInd = $efficientAppliancesInd;

        return $this;
    }

    /**
     * Gets as efficientLightingInd
     *
     * Energy efficient lighting used indicator.Example: trueImplementer: If true, the
     * property uses energy saving lighting facilities, such as energy-efficient LED
     * fixtures.
     *
     * @return boolean
     */
    public function getEfficientLightingInd()
    {
        return $this->efficientLightingInd;
    }

    /**
     * Sets a new efficientLightingInd
     *
     * Energy efficient lighting used indicator.Example: trueImplementer: If true, the
     * property uses energy saving lighting facilities, such as energy-efficient LED
     * fixtures.
     *
     * @param boolean $efficientLightingInd
     * @return self
     */
    public function setEfficientLightingInd($efficientLightingInd)
    {
        $this->efficientLightingInd = $efficientLightingInd;

        return $this;
    }

    /**
     * Gets as heatPowerCombInd
     *
     * Combined heat and power units used indicator.Example: trueImplementer: If true,
     * the property uses combined heat and power units.
     *
     * @return boolean
     */
    public function getHeatPowerCombInd()
    {
        return $this->heatPowerCombInd;
    }

    /**
     * Sets a new heatPowerCombInd
     *
     * Combined heat and power units used indicator.Example: trueImplementer: If true,
     * the property uses combined heat and power units.
     *
     * @param boolean $heatPowerCombInd
     * @return self
     */
    public function setHeatPowerCombInd($heatPowerCombInd)
    {
        $this->heatPowerCombInd = $heatPowerCombInd;

        return $this;
    }

    /**
     * Gets as heatPumpInd
     *
     * Heat pumps used indicator.Example: trueImplementer: If true, the property uses
     * heat pumps.
     *
     * @return boolean
     */
    public function getHeatPumpInd()
    {
        return $this->heatPumpInd;
    }

    /**
     * Sets a new heatPumpInd
     *
     * Heat pumps used indicator.Example: trueImplementer: If true, the property uses
     * heat pumps.
     *
     * @param boolean $heatPumpInd
     * @return self
     */
    public function setHeatPumpInd($heatPumpInd)
    {
        $this->heatPumpInd = $heatPumpInd;

        return $this;
    }

    /**
     * Gets as powerSavingPolicyInd
     *
     * Power saving policy indicator.Example: trueImplementer: If true, the property
     * has a power saving policy.
     *
     * @return boolean
     */
    public function getPowerSavingPolicyInd()
    {
        return $this->powerSavingPolicyInd;
    }

    /**
     * Sets a new powerSavingPolicyInd
     *
     * Power saving policy indicator.Example: trueImplementer: If true, the property
     * has a power saving policy.
     *
     * @param boolean $powerSavingPolicyInd
     * @return self
     */
    public function setPowerSavingPolicyInd($powerSavingPolicyInd)
    {
        $this->powerSavingPolicyInd = $powerSavingPolicyInd;

        return $this;
    }

    /**
     * Gets as solarInd
     *
     * Solar energy used indicator.Example: trueImplementer: If true, the property uses
     * solar energy.
     *
     * @return boolean
     */
    public function getSolarInd()
    {
        return $this->solarInd;
    }

    /**
     * Sets a new solarInd
     *
     * Solar energy used indicator.Example: trueImplementer: If true, the property uses
     * solar energy.
     *
     * @param boolean $solarInd
     * @return self
     */
    public function setSolarInd($solarInd)
    {
        $this->solarInd = $solarInd;

        return $this;
    }

    /**
     * Gets as tempControlInd
     *
     * Temperature control indicator.Example: trueImplementer: If true, guest rooms or
     * meeting facilities contain temperature control mechanisms, such as digital
     * thermostats for constant temperature control.
     *
     * @return mixed
     */
    public function getTempControlInd()
    {
        return $this->tempControlInd;
    }

    /**
     * Sets a new tempControlInd
     *
     * Temperature control indicator.Example: trueImplementer: If true, guest rooms or
     * meeting facilities contain temperature control mechanisms, such as digital
     * thermostats for constant temperature control.
     *
     * @param mixed $tempControlInd
     * @return self
     */
    public function setTempControlInd($tempControlInd)
    {
        $this->tempControlInd = $tempControlInd;

        return $this;
    }

    /**
     * Gets as windTurbineInd
     *
     * Wind turbines used indicator.Example: trueImplementer: If true, the property
     * uses wind turbines.
     *
     * @return boolean
     */
    public function getWindTurbineInd()
    {
        return $this->windTurbineInd;
    }

    /**
     * Sets a new windTurbineInd
     *
     * Wind turbines used indicator.Example: trueImplementer: If true, the property
     * uses wind turbines.
     *
     * @param boolean $windTurbineInd
     * @return self
     */
    public function setWindTurbineInd($windTurbineInd)
    {
        $this->windTurbineInd = $windTurbineInd;

        return $this;
    }

    /**
     * Gets as energyGenerated
     *
     * Renewable energy kilowatts amount.Example: 677Implementer: This is the amount of
     * power generated by any sources of renewable energy at the hotel in kilowatts.
     *
     * @return integer
     */
    public function getEnergyGenerated()
    {
        return $this->energyGenerated;
    }

    /**
     * Sets a new energyGenerated
     *
     * Renewable energy kilowatts amount.Example: 677Implementer: This is the amount of
     * power generated by any sources of renewable energy at the hotel in kilowatts.
     *
     * @param integer $energyGenerated
     * @return self
     */
    public function setEnergyGenerated($energyGenerated)
    {
        $this->energyGenerated = $energyGenerated;

        return $this;
    }

    /**
     * Gets as energyStarRating
     *
     * Energy star rating.Example: 4.2Implementer: This is the energy star rating of
     * the property.
     *
     * @return string
     */
    public function getEnergyStarRating()
    {
        return $this->energyStarRating;
    }

    /**
     * Sets a new energyStarRating
     *
     * Energy star rating.Example: 4.2Implementer: This is the energy star rating of
     * the property.
     *
     * @param string $energyStarRating
     * @return self
     */
    public function setEnergyStarRating($energyStarRating)
    {
        $this->energyStarRating = $energyStarRating;

        return $this;
    }

    /**
     * Adds as usage
     *
     * Power usage detail.
     *
     * @return self
     * @param
     * \Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType\EnergyAType\UsageAType
     * $usage
     */
    public function addToUsage(\Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType\EnergyAType\UsageAType $usage)
    {
        $this->usage[] = $usage;

        return $this;
    }

    /**
     * isset usage
     *
     * Power usage detail.
     *
     * @param scalar $index
     * @return boolean
     */
    public function issetUsage($index)
    {
        return isset($this->usage[$index]);
    }

    /**
     * unset usage
     *
     * Power usage detail.
     *
     * @param scalar $index
     * @return void
     */
    public function unsetUsage($index)
    {
        unset($this->usage[$index]);
    }

    /**
     * Gets as usage
     *
     * Power usage detail.
     *
     * @return
     * \Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType\EnergyAType\UsageAType[]
     */
    public function getUsage()
    {
        return $this->usage;
    }

    /**
     * Sets a new usage
     *
     * Power usage detail.
     *
     * @param
     * \Davispeixoto\OpenTravelAlliance\EnvironmentalImpactType\EnergyAType\UsageAType[]
     * $usage
     * @return self
     */
    public function setUsage(array $usage)
    {
        $this->usage = $usage;

        return $this;
    }

    /**
     * Adds as programDescription
     *
     * Energy program description.
     *
     * @return self
     * @param \Davispeixoto\OpenTravelAlliance\ParagraphType $programDescription
     */
    public function addToProgramDescription(\Davispeixoto\OpenTravelAlliance\ParagraphType $programDescription)
    {
        $this->programDescription[] = $programDescription;

        return $this;
    }

    /**
     * isset programDescription
     *
     * Energy program description.
     *
     * @param scalar $index
     * @return boolean
     */
    public function issetProgramDescription($index)
    {
        return isset($this->programDescription[$index]);
    }

    /**
     * unset programDescription
     *
     * Energy program description.
     *
     * @param scalar $index
     * @return void
     */
    public function unsetProgramDescription($index)
    {
        unset($this->programDescription[$index]);
    }

    /**
     * Gets as programDescription
     *
     * Energy program description.
     *
     * @return \Davispeixoto\OpenTravelAlliance\ParagraphType[]
     */
    public function getProgramDescription()
    {
        return $this->programDescription;
    }

    /**
     * Sets a new programDescription
     *
     * Energy program description.
     *
     * @param \Davispeixoto\OpenTravelAlliance\ParagraphType[] $programDescription
     * @return self
     */
    public function setProgramDescription(array $programDescription)
    {
        $this->programDescription = $programDescription;

        return $this;
    }


}

